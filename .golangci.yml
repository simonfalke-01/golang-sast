version: "2"

run:
  timeout: 10m
  go: "1.24"
  
linters:
  default: none
  enable:
    # bugs preset
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - contextcheck
    - durationcheck
    - errcheck
    - errchkjson
    - errorlint
    - exhaustive
    - gocheckcompilerdirectives
    - gochecksumtype
    - gosec
    - gosmopolitan
    - govet
    - loggercheck
    - makezero
    - musttag
    - nilerr
    - nilnesserr
    - noctx
    - protogetter
    - reassign
    - recvcheck
    - rowserrcheck
    - spancheck
    - sqlclosecheck
    - staticcheck
    - testifylint
    - zerologlint
    
    # comment preset
    - dupword
    - godot
    - godox
    - misspell
    
    # complexity preset
    - cyclop
    - funlen
    - gocognit
    - gocyclo
    - maintidx
    - nestif
    
    # error preset
    - err113
    - wrapcheck
    
    # import preset
    - depguard
    - gomodguard
    
    # metalinter preset
    - gocritic
    - revive
    
    # module preset
    - gomoddirectives
    
    # performance preset
    - fatcontext
    - perfsprint
    - prealloc
    
    # style preset
    - canonicalheader
    - containedctx
    - copyloopvar
    - decorder
    - dogsled
    - dupl
    - errname
    - exhaustruct
    - exptostd
    - forbidigo
    - forcetypeassert
    - ginkgolinter
    - gochecknoglobals
    - gochecknoinits
    - goconst
    - goheader
    - goprintffuncname
    - grouper
    - iface
    - importas
    - inamedparam
    - interfacebloat
    - intrange
    - ireturn
    - lll
    - mirror
    - mnd
    - nakedret
    - nilnil
    - nlreturn
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - paralleltest
    - predeclared
    - promlinter
    - sloglint
    - tagalign
    - tagliatelle
    - testpackage
    - tparallel
    - unconvert
    - usestdlibvars
    - varnamelen
    - wastedassign
    - whitespace
    - wsl
    
    # test preset
    - testableexamples
    - thelper
    - usetesting
    
    # unused preset
    - ineffassign
    - unparam
    - unused

  settings:
    # Only include settings that are confirmed to work in v2.4.0
    cyclop:
      max-complexity: 15
      package-average: 0
    
    depguard:
      rules:
        main:
          deny:
            - pkg: "github.com/sirupsen/logrus"
              desc: "use standard log/slog instead"
    
    dupl:
      threshold: 100
    
    errcheck:
      check-type-assertions: true
      check-blank: true
      exclude-functions:
        - "io.ReadFile"
        - "io.Copy(*bytes.Buffer)"
        - "io.Copy(os.Stdout)"
    
    errorlint:
      errorf: true
      asserts: true
      comparison: true
    
    exhaustive:
      check:
        - switch
        - map
    
    forbidigo:
      forbid:
        - pattern: '^print.*$'
          msg: "use log/slog instead"
        - pattern: '^fmt\.Print.*$'
          msg: "use log/slog instead"
    
    funlen:
      lines: 100
      statements: 50
    
    gocognit:
      min-complexity: 15
    
    goconst:
      min-len: 2
      min-occurrences: 3
    
    gocritic:
      enabled-checks:
        - appendAssign
        - argOrder
        - assignOp
        - badCall
        - badCond
        - badLock
        - badRegexp
        - builtinShadow
        - caseOrder
        - commentedOutCode
        - defaultCaseOrder
        - deferInLoop
        - dupArg
        - dupBranchBody
        - dupCase
        - dupSubExpr
        - emptyFallthrough
        - equalFold
        - flagDeref
        - flagName
        - hexLiteral
        - ifElseChain
        - importShadow
        - indexAlloc
        - methodExprCall
        - nestingReduce
        - newDeref
        - nilValReturn
        - octalLiteral
        - offBy1
        - rangeExprCopy
        - rangeValCopy
        - regexpMust
        - singleCaseSwitch
        - sloppyLen
        - stringXbytes
        - switchTrue
        - typeSwitchVar
        - underef
        - unlambda
        - unnecessaryBlock
        - unslice
        - valSwap
        - wrapperFunc
        - yodaStyleExpr
    
    gocyclo:
      min-complexity: 15
    
    godot:
      scope: declarations
      period: true
      capital: false
    
    goheader:
      template: |-
        Copyright {{ YEAR }} simonfalke-01
    
    gomodguard:
      blocked:
        modules:
          - github.com/golang/protobuf:
              reason: "use google.golang.org/protobuf instead"
    
    gosec:
      severity: "low"
      confidence: "low"
    
    govet:
      enable-all: false
      enable:
        - assign
        - atomic
        - bools
        - buildtag
        - cgocall
        - composites
        - copylocks
        - errorsas
        - httpresponse
        - loopclosure
        - lostcancel
        - nilfunc
        - printf
        - shift
        - structtag
        - tests
        - unmarshal
        - unreachable
        - unsafeptr
        - unusedresult
    
    ireturn:
      allow:
        - anon
        - error
        - empty
        - stdlib
    
    lll:
      line-length: 120
    
    maintidx:
      under: 20
    
    misspell:
      locale: US
      ignore-rules:
        - cancelled
    
    mnd:
      checks:
        - argument
        - case
        - condition
        - operation
        - return
        - assign
    
    nakedret:
      max-func-lines: 30
    
    nestif:
      min-complexity: 4
    
    nilnil:
      checked-types:
        - ptr
        - func
        - iface
        - map
        - chan
    
    nlreturn:
      block-size: 2
    
    nolintlint:
      allow-unused: false
      require-explanation: true
      require-specific: true
    
    paralleltest:
      ignore-missing: false
    
    prealloc:
      simple: true
      range-loops: true
      for-loops: false
    
    predeclared:
      ignore:
        - new
        - int
      qualified-name: false
    
    revive:
      rules:
        - name: blank-imports
        - name: context-as-argument
        - name: context-keys-type
        - name: dot-imports
        - name: error-return
        - name: error-strings
        - name: error-naming
        - name: exported
        - name: if-return
        - name: increment-decrement
        - name: var-naming
        - name: var-declaration
        - name: package-comments
        - name: range
        - name: receiver-naming
        - name: time-naming
        - name: unexported-return
        - name: indent-error-flow
        - name: errorf
        - name: empty-block
        - name: superfluous-else
        - name: unused-parameter
        - name: unreachable-code
        - name: redefines-builtin-id
    
    sloglint:
      no-mixed-args: true
      context: "all"
    
    staticcheck:
      checks:
        - "all"
        - "-SA1019"
        - "-SA9003"
    
    tagliatelle:
      case:
        rules:
          json: camel
          yaml: camel
          xml: camel
          bson: camel
          avro: snake
          mapstructure: kebab
    
    testifylint:
      enable:
        - bool-compare
        - compares
        - empty
        - error-is-as
        - error-nil
        - expected-actual
        - go-require
        - float-compare
        - len
        - nil-compare
        - require-error
        - suite-extra-assert-call
        - suite-thelper
    
    thelper:
      test:
        first: true
        name: true
        begin: true
      benchmark:
        first: true
        name: true
        begin: true
    
    unconvert:
      fast-math: false
      safe: false
    
    unparam:
      check-exported: false
    
    unused:
      field-writes-are-uses: true
      post-statements-are-reads: false
      parameters-are-used: true
      local-variables-are-used: true
    
    varnamelen:
      min-name-length: 2
      check-receiver: false
      check-return: false
      check-type-param: false
      ignore-type-assert-ok: true
      ignore-map-index-ok: true
      ignore-chan-recv-ok: true
      ignore-decls:
        - c echo.Context
        - t testing.T
        - f *foo.Bar
        - e error
        - i int
        - ok bool
    
    whitespace:
      multi-if: false
      multi-func: false
    
    wrapcheck:
      ignore-sigs:
        - .Errorf(
        - errors.New(
        - errors.Unwrap(
        - .Wrap(
        - .Wrapf(
      ignore-sig-regexps:
        - \.New.*Error\(
      ignore-package-globs:
        - encoding/*
        - github.com/pkg/*
    
    wsl:
      strict-append: true
      allow-assign-and-call: true
      allow-multiline-assign: true
      allow-separated-leading-comment: false
      allow-trailing-comment: false
      force-case-trailing-whitespace: 0
      force-err-cuddling: false
      force-short-decl-cuddling: false
      allow-assign-and-anything: false

  exclusions:
    paths:
      - ".*_test.go"
      - "vendor/"
      - ".git/"
      - "_pb.go"
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - path: '_test\.go'
        linters:
          - dupl
          - errcheck
          - funlen
          - gochecknoglobals
          - gocognit
          - goconst
          - gocyclo
          - gosec
          - maintidx
          - unparam
          - unused
          - varnamelen
      - path: '.*\.pb\.go'
        linters:
          - lll
          - gosec
          - dupl
      - path: 'main\.go'
        linters:
          - gochecknoinits
      - text: 'weak cryptographic primitive'
        linters:
          - gosec
      - linters:
          - staticcheck
        text: 'SA9003:'
      - linters:
          - revive
        text: 'package-comments:'
      - source: "^//go:generate "
        linters:
          - lll

formatters:
  enable:
    - gci
    - gofmt
    - gofumpt
    - goimports
  settings:
    gci:
      sections:
        - standard
        - default
        - prefix(github.com/simonfalke-01/golang-sast)
    
    gofmt:
      simplify: true
    
    gofumpt:
      extra-rules: true
    
    goimports:
      local-prefixes:
        - "github.com/simonfalke-01/golang-sast"

output:
  formats:
    text:
      path: stdout
    json:
      path: golangci-lint-report.json
    checkstyle:
      path: golangci-lint-report.xml
    sarif:
      path: golangci-lint-report.sarif